<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">  
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/admin_assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/admin_assets/css/main.css" rel="stylesheet" type="text/css" />
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    <style>
        /* Add custom styles for active sidebar items */
        .menu-aside .menu-item.active a {
            background-color: #333;
        }

        .menu-aside .menu-item.active a .icon {
            color: #fff;
        }

        .menu-aside .menu-item.active a .text {
            color: #fff;
        }
    </style>
    <style>
        .is-invalid {
            border-color: red !important;
        }
    
        .invalid-feedback {
            display: none;
            color: red;
            margin-top: 5px;
        }
    </style>
     <style>
        #imagePreview .imageItem {
            display: inline-block;
            margin-right: 10px;
            position: relative;
        }
        #imagePreview .imageItem img {
            width: 100px;
            height: 100px;
        }
    </style>
</head>

<body>
    <!-- Header -->
    <header class="main-header navbar">
        <div class="col-search">
            <!-- Search form can be added here if needed -->
        </div>
        <div class="col-nav">
            <!-- Sidebar toggle button -->
            <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside">
                <i class="material-icons md-apps"></i>
            </button>
            <!-- User profile dropdown -->
            <ul class="nav">
                <!-- User notifications -->
                <li class="nav-item">
                    <a class="nav-link btn-icon" href="#">
                        <i class="material-icons md-notifications animation-shake"></i>
                        <span class="badge rounded-pill">3</span>
                    </a>
                </li>
                <!-- Fullscreen toggle -->
                <li class="nav-item">
                    <a href="#" class="requestfullscreen nav-link btn-icon">
                        <i class="material-icons md-cast"></i>
                    </a>
                </li>
                <!-- Language dropdown -->
                <li class="dropdown nav-item">
                    <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownLanguage" aria-expanded="false">
                        <i class="material-icons md-public"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                        <!-- Language options -->
                        <!-- Example: -->
                        <a class="dropdown-item text-brand" href="#"><img src="/admin_assets/imgs/theme/flag-us.png" alt="English">English</a>
                        <!-- Add more language options as needed -->
                    </div>
                </li>
                <!-- User profile dropdown -->
                <li class="dropdown nav-item">
                    <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false">
                        <img class="img-xs rounded-circle" src="/admin_assets/imgs/people/avatar2.jpg" alt="User">
                    </a>
                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                        <!-- User profile options -->
                        <!-- Example: -->
                        <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit Profile</a>
                        <!-- Add more user profile options as needed -->
                    </div>
                </li>
            </ul>
        </div>
    </header>
    <!-- Sidebar -->
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="/admin_assets/imgs/theme/lensluxe.png" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="#" onclick="highlightMenuItem(this)"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <!-- Customers link -->
                <li class="menu-item">
                    <a class="menu-link" href="/admin/customer" onclick="highlightMenuItem(this)">
                        <i class="icon material-icons md-people"></i>
                        <span class="text">Customers</span>
                    </a>
                </li>
                <!-- Categories link -->
                <li class="menu-item">
                    <a class="menu-link" href="#" onclick="highlightMenuItem(this)">
                        <i class="icon material-icons md-category"></i>
                        <span class="text">Categories</span>
                    </a>
                </li>
                <!-- Products link -->
                <li class="menu-item">
                    <a class="menu-link" href="/admin/product" onclick="highlightMenuItem(this)">
                        <i class="icon material-icons md-shopping_basket"></i>
                        <span class="text">Products</span>
                    </a>
                </li>
            </ul>
        </nav>
    </aside>
    <!-- Main Content -->
    <main class="main-wrap">
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Edit Product</h2>
                </div>
            </div>
            <section class="content-main">
                <div class="container">
                    <div class="edit-product-container">
                        <form action="/admin/product/<%= product._id %>" method="post" enctype="multipart/form-data" id="productForm">
                            <div class="mb-3">
                                <label for="name" class="form-label">Name:</label>
                                <input type="text" id="name" name="name" value="<%= product.name %>" class="form-control" required>
                                <div class="invalid-feedback">Please enter the product name.</div>
                            </div>
                            <div class="mb-3">
                                <label for="description" class="form-label">Description:</label>
                                <textarea id="description" name="description" class="form-control" required><%= product.description %></textarea>
                                <div class="invalid-feedback">Please enter the product description.</div>
                            </div>
                            <div class="mb-3">
                                <label for="category" class="form-label">Category:</label>
                                <select id="category" name="category" class="form-control" required>
                                    <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>" <%= product.category == category._id ? 'selected' : '' %>><%= category.name %></option>
                                    <% }); %>
                                </select>
                                <div class="invalid-feedback">Please select a category.</div>
                            </div>
                            <div class="mb-3">
                                <label for="price" class="form-label">Price:</label>
                                <input type="number" id="price" name="price" value="<%= product.price %>" min="0" step="0.01" class="form-control" required>
                                <div class="invalid-feedback">Please enter a valid price (non-negative).</div>
                            </div>
                            <div class="mb-3">
                                <label for="countinstock" class="form-label">Count in Stock:</label>
                                <input type="number" id="countinstock" name="countinstock" value="<%= product.countinstock %>" min="0" step="1" class="form-control" required>
                                <div class="invalid-feedback">Please enter a valid count in stock (non-negative).</div>
                            </div>
                            <div class="mb-3">
                                <label for="existingImages" class="form-label">Existing Images:</label>
                                <ul class="list-unstyled" id="imageList">
                                    <% product.images.forEach(image => { %>
                                    <li>
                                        <img src="/productimages/<%= image %>" alt="<%= image %>" width="100" class="mr-2">
                                        <input type="checkbox" name="deleteImages[]" value="<%= image %>"> Delete
                                    </li>
                                    <% }); %>
                                </ul>
                            </div>
                            <div class="mb-3">
                                <label for="newImages" class="form-label">Add New Images:</label>
                                <input type="file" id="productImages" name="newImages" accept="image/*" multiple class="form-control">
                                <div class="invalid-feedback">Choose a valid image format (JPEG, PNG, GIF, WebP)</div>
                                <div id="imagePreview" class="mt-3"></div>
                            </div>
                            <div class="mb-3">
                                <button type="submit" class="btn btn-primary">Update Product</button>
                            </div>
                        </form>
                    </div>
                </div>
            </section>
        </section>
    </main>
    
    <!-- Modal for Image Cropping -->
    <div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="imageModalLabel">Crop Image</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <img id="modalImage" src="" alt="Crop image" class="img-fluid">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="cropBtn">Crop</button>
                    <button type="button" class="btn btn-success" id="saveBtn">Save</button>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    
    <script>
        $(document).ready(function () {
            var cropper;
            var currentImageItem;
            var croppedBlobs = [];
    
            $("#productImages").change(function (event) {
                var files = event.target.files;
                if (files.length > 0) {
                    Array.from(files).forEach(file => {
                        if (isValidImageType(file.type)) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                $("#modalImage").attr("src", e.target.result);
                                $("#imageModal").modal("show");
                                currentImageItem = $('<div class="imageItem"><img src="' + e.target.result + '" class="img-thumbnail"></div>');
                                if (cropper) {
                                    cropper.replace(e.target.result);
                                } else {
                                    initCropper();
                                }
                            }
                            reader.readAsDataURL(file);
                        } else {
                            alert('Invalid image format. Only JPEG, PNG, GIF, and WebP formats are allowed.');
                        }
                    });
                }
            });
    
            $("#cropBtn").click(function () {
                if (cropper) {
                    cropper.crop();
                }
            });
    
            $("#saveBtn").click(function () {
                if (cropper && currentImageItem) {
                    var croppedCanvas = cropper.getCroppedCanvas();
                    croppedCanvas.toBlob(function (blob) {
                        croppedBlobs.push(blob);
                        var croppedImage = URL.createObjectURL(blob);
                        currentImageItem.find("img").attr("src", croppedImage);
                        $("#imagePreview").append(currentImageItem);
                        $("#imageModal").modal("hide");
                    });
                }
            });
    
            $("#imageModal").on("shown.bs.modal", function () {
                initCropper();
            });
    
            $("#imageModal").on("hidden.bs.modal", function () {
                if (cropper) {
                    cropper.destroy();
                    cropper = null;
                }
                $("#modalImage").attr("src", "");
            });
    
            function initCropper() {
                if (cropper) {
                    cropper.destroy();
                }
                cropper = new Cropper($("#modalImage")[0], {
                    aspectRatio: 16 / 9,
                    viewMode: 3,
                    guides: true,
                    autoCropArea: 0.8,
                    movable: true,
                    zoomable: true,
                    rotatable: true,
                    scalable: true,
                    crop: function (event) {
                        console.log(event.detail.x);
                        console.log(event.detail.y);
                        console.log(event.detail.width);
                        console.log(event.detail.height);
                        console.log(event.detail.rotate);
                        console.log(event.detail.scaleX);
                        console.log(event.detail.scaleY);
                    },
                });
            }
    
            function isValidImageType(type) {
                const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
                return validTypes.includes(type);
            }
    
            // Form validation and submission
            document.addEventListener('DOMContentLoaded', function () {
                const form = document.getElementById('productForm');
    
                form.addEventListener('submit', function (event) {
                    event.preventDefault();
    
                    const name = document.getElementById('name').value.trim();
                    const description = document.getElementById('description').value.trim();
                    const category = document.getElementById('category').value.trim();
                    const price = document.getElementById('price').value.trim();
                    const countinstock = document.getElementById('countinstock').value.trim();
                    const newImages = document.getElementById('productImages').files;
    
                    const nameFeedback = document.querySelector('#name + .invalid-feedback');
                    const descriptionFeedback = document.querySelector('#description + .invalid-feedback');
                    const categoryFeedback = document.querySelector('#category + .invalid-feedback');
                    const priceFeedback = document.querySelector('#price + .invalid-feedback');
                    const countinstockFeedback = document.querySelector('#countinstock + .invalid-feedback');
                    const newImagesFeedback = document.querySelector('#productImages + .invalid-feedback');
    
                    let isValid = true;
    
                    // Validation for Name
                    if (!name) {
                        nameFeedback.style.display = 'block';
                        isValid = false;
                    } else {
                        nameFeedback.style.display = 'none';
                    }
    
                    // Validation for Description
                    if (!description) {
                        descriptionFeedback.style.display = 'block';
                        isValid = false;
                    } else {
                        descriptionFeedback.style.display = 'none';
                    }
    
                    // Validation for Category
                    if (!category) {
                        categoryFeedback.style.display = 'block';
                        isValid = false;
                    } else {
                        categoryFeedback.style.display = 'none';
                    }
    
                    // Validation for Price
                    if (!price || isNaN(price) || parseFloat(price) < 0) {
                        priceFeedback.style.display = 'block';
                        isValid = false;
                    } else {
                        priceFeedback.style.display = 'none';
                    }
    
                    // Validation for Count in Stock
                    if (!countinstock || isNaN(countinstock) || parseInt(countinstock) < 0) {
                        countinstockFeedback.style.display = 'block';
                        isValid = false;
                    } else {
                        countinstockFeedback.style.display = 'none';
                    }
    
                    // Validation for New Images (only if an image is selected)
                    if (newImages.length > 0) {
                        // Check if all selected files are valid images
                        let validImage = true;
                        for (let i = 0; i < newImages.length; i++) {
                            if (!isValidImageType(newImages[i].type)) {
                                validImage = false;
                                break;
                            }
                        }
                        if (!validImage) {
                            newImagesFeedback.style.display = 'block';
                            isValid = false;
                        } else {
                            newImagesFeedback.style.display = 'none';
                        }
                    }
    
                    if (isValid) {
                        // Append the cropped image blobs to the form data
                        const formData = new FormData(form);
                        croppedBlobs.forEach((blob, index) => {
                            formData.append('croppedImages', blob, `cropped_image_${index}.png`);
                        });
                        // Use AJAX to submit the form data
                        $.ajax({
                            url: form.action,
                            method: form.method,
                            data: formData,
                            processData: false,
                            contentType: false,
                            success: function (response) {
                                window.location.reload();
                            },
                            error: function (error) {
                                alert('Failed to update product. Please try again.');
                            }
                        });
                    }
                });
            });
        });
    </script>
    